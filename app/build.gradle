apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.belatrix.hackatrix"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {

        def Properties serverProps = new Properties()
        serverProps.load(new FileInputStream(file('../server.properties')))
        debug {
            buildConfigField "String", "BASE_URL", serverProps["baseDevelopUrl"]
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", serverProps["baseReleaseUrl"]
        }
    }
}

def daggerVersion = '2.8'
def butterKnifeVersion = '8.0.1'
def retrofitVersion = '2.0.2'
def jUnitVersion = '4.12'
def mockitoVersion = '1.9.5'
def okhttpVersion = '3.2.0'
def supportLibrariesVersion = "25.0.1"
def timberVersion = "4.1.0"
//def viewPagerIndicatorVersion = "1.0.2"
def bottomNavigationVersion = "2.0.1"
def daggerMockVersion = "0.6.4"
def glideVersion = "3.7.0"
def okhttpVersionCore = "3.6.0"
def firebaseLibrariesVersion = "9.0.2"

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //di
    compile "com.google.dagger:dagger:${daggerVersion}"
    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    apt "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"
    apt "com.google.dagger:dagger-compiler:${daggerVersion}"

    // general
    compile "com.google.firebase:firebase-core:${firebaseLibrariesVersion}"
    compile "com.google.firebase:firebase-messaging:${firebaseLibrariesVersion}"
    compile "com.android.support:design:${supportLibrariesVersion}"
    compile "com.android.support:cardview-v7:${supportLibrariesVersion}"
    compile "com.jakewharton.timber:timber:${timberVersion}"
    compile 'pub.devrel:easypermissions:0.3.0'
    //network
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    //compile "com.squareup.okhttp3:okhttp:${okhttpVersionCore}"
    //tests
    testCompile "junit:junit:${jUnitVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    //design
    //compile  "com.github.ronaldsmartin:Material-ViewPagerIndicator:${viewPagerIndicatorVersion}"
    compile "com.aurelhubert:ahbottomnavigation:${bottomNavigationVersion}"
    compile "com.github.bumptech.glide:glide:${glideVersion}"
    compile "com.github.bumptech.glide:okhttp3-integration:1.4.0@aar"
    //scan
    compile 'com.journeyapps:zxing-android-embedded:3.5.0@aar'
    compile 'com.google.zxing:core:3.2.0'
}


apply plugin: 'com.google.gms.google-services'